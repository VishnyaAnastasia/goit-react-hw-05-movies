{"version":3,"file":"static/js/703.dbe899ed.chunk.js","mappings":"2LACA,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAsG,6BAAtG,EAA8I,4BAA9I,EAAsL,6BAAtL,EAAgO,8B,SCInNA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEF,IACE,eAAIG,UAAWC,EAAf,SACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,eAAIH,UAAWC,EAAf,UACE,UAAC,KAAD,CACEG,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CACLC,KAAMT,EAASU,OACXV,EAASW,SAAWX,EAASU,OAC7BV,EAASW,UALjB,WAQE,gBACET,UAAWC,EACXS,IACEP,EAAKQ,YAAL,yDACsDR,EAAKQ,aACvD,kFAENC,IAAKT,EAAKU,SAEZ,iBAAKb,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAkCE,EAAKU,SACvC,cAAGb,UAAWC,EAAd,SAAkCE,EAAKW,sBApBXX,EAAKE,GAD1B,KA6BtB,C,uFCpBD,UAdiB,WACf,OAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,MAAK,SAAAC,GAAQ,OAAIJ,EAASI,EAASC,KAAKC,QAA3B,GAC9B,GAAE,KAGD,SAAC,IAAD,CAAST,MAAM,gBAAf,UACE,SAAC,IAAD,CAAWhB,MAAOA,KAGvB,C,8LCjBK0B,EAAU,mCAEHL,EAAa,mCAAG,6GAEFM,EAAAA,EAAAA,IAAA,kEACsCD,IAHpC,cAEnBH,EAFmB,yBAKlBA,GALkB,gCAOzBK,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAW,mCAAG,WAAMC,GAAN,gGAEAJ,EAAAA,EAAAA,IAAA,4DACgCD,EADhC,4DAC2FK,IAH3F,cAEjBR,EAFiB,yBAKhBA,GALgB,gCAOvBK,QAAQC,MAAR,MAPuB,yDAAH,sDAWXG,EAAY,mCAAG,WAAMxB,GAAN,gGAEDmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,oBAC+BkB,EAD/B,oBAFC,cAElBH,EAFkB,yBAKjBA,GALiB,gCAOxBK,QAAQC,MAAR,MAPwB,yDAAH,sDAWZI,EAAS,mCAAG,WAAMzB,GAAN,gGAEEmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,4BACuCkB,EADvC,oBAFF,cAEfH,EAFe,yBAKdA,GALc,gCAOrBK,QAAQC,MAAR,MAPqB,yDAAH,sDAWTK,EAAY,mCAAG,WAAM1B,GAAN,gGAEDmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,4BACuCkB,EADvC,2BAFC,cAElBH,EAFkB,yBAKjBA,GALiB,gCAOxBK,QAAQC,MAAR,MAPwB,yDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/FilmsList/FilmsList.module.css?be22","components/FilmsList/FilmsList.jsx","pages/Tranding.jsx","utils/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmsList\":\"FilmsList_filmsList__TI9LZ\",\"films\":\"FilmsList_films__1fWlu\",\"filmCover\":\"FilmsList_filmCover__Iimj4\",\"filmCard\":\"FilmsList_filmCard__iGXBr\",\"filmTitle\":\"FilmsList_filmTitle__dkEgX\",\"filmRating\":\"FilmsList_filmRating__yxwLD\"};","import { Link, useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\nimport styles from './FilmsList.module.css';\n\nexport const FilmsList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    films && (\n      <ul className={styles.filmsList}>\n        {films.map(film => (\n          <li className={styles.films} key={film.id}>\n            <Link\n              to={`/search/${film.id}`}\n              state={{\n                from: location.search\n                  ? location.pathname + location.search\n                  : location.pathname,\n              }}\n            >\n              <img\n                className={styles.filmCover}\n                src={\n                  film.poster_path\n                    ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${film.poster_path}`\n                    : 'https://image.tmdb.org/t/p/w600_and_h900_bestv2/t9S352o0lbpXoaSC2X2T8bghGDa.jpg'\n                }\n                alt={film.title}\n              />\n              <div className={styles.filmCard}>\n                <h3 className={styles.filmTitle}>{film.title}</h3>\n                <p className={styles.filmRating}>{film.vote_average}</p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\n// FilmsList.propTypes = {\n//   films: PropTypes.ar.isRequired,\n// };\n","import { useState, useEffect } from 'react';\n\nimport { Section } from 'components/Section/Section';\nimport { FilmsList } from 'components/FilmsList/FilmsList';\nimport { fetchTrending } from 'utils/fetchAPI';\n\nconst Tranding = () => {\n  const [films, setFilms] = useState(null);\n\n  useEffect(() => {\n    fetchTrending().then(response => setFilms(response.data.results));\n  }, []);\n\n  return (\n    <Section title=\"Popular Today\">\n      <FilmsList films={films} />\n    </Section>\n  );\n};\n\nexport default Tranding;\n","import axios from 'axios';\nconst API_KEY = '49fe15e72cb1827b9d3c3b6cc5e1d318';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["FilmsList","films","location","useLocation","className","styles","map","film","to","id","state","from","search","pathname","src","poster_path","alt","title","vote_average","useState","setFilms","useEffect","fetchTrending","then","response","data","results","API_KEY","axios","console","error","fetchSearch","query","fetchDetails","fetchCast","fetchReviews"],"sourceRoot":""}