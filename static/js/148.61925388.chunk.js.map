{"version":3,"file":"static/js/148.61925388.chunk.js","mappings":"2NACA,EAA6B,2BAA7B,EAAiE,uBAAjE,EAAqG,2BAArG,EAA4I,0BAA5I,EAAkL,0B,SCErKA,EAAS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXG,IACED,EAAME,aAAN,yDACsDF,EAAME,cACxD,kFAENC,IAAKH,EAAMI,QAEb,gBAAKP,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,SAAiCE,EAAMI,WAXRJ,EAAMK,GAD5B,KAkBpB,E,SCHD,EAfa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUL,GAAIM,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASC,KAAKjB,KAA1B,GAC5B,GAAE,CAACS,IAEmB,IAAhBT,EAAKkB,QACV,SAACnB,EAAD,CAAQC,KAAMA,KAEd,SAACmB,EAAA,EAAD,CAASC,MAAM,WAElB,C,8LCnBKC,EAAU,mCAEHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IAAA,kEACsCF,IAHpC,cAEnBL,EAFmB,yBAKlBA,GALkB,gCAOzBQ,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAW,mCAAG,WAAMC,GAAN,gGAEAJ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,4DAC2FM,IAH3F,cAEjBX,EAFiB,yBAKhBA,GALgB,gCAOvBQ,QAAQC,MAAR,MAPuB,yDAAH,sDAWXG,EAAY,mCAAG,WAAMnB,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,oBAC+BY,EAD/B,oBAFC,cAElBL,EAFkB,yBAKjBA,GALiB,gCAOxBQ,QAAQC,MAAR,MAPwB,yDAAH,sDAWZX,EAAS,mCAAG,WAAML,GAAN,gGAEEc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,oBAFF,cAEfL,EAFe,yBAKdA,GALc,gCAOrBQ,QAAQC,MAAR,MAPqB,yDAAH,sDAWTI,EAAY,mCAAG,WAAMpB,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,2BAFC,cAElBL,EAFkB,yBAKjBA,GALiB,gCAOxBQ,QAAQC,MAAR,MAPwB,yDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Actors/Actors.module.css?915e","components/Actors/Actors.jsx","pages/Cast.jsx","utils/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsList\":\"Actors_actorsList__1RmLc\",\"actors\":\"Actors_actors__Kjkmm\",\"actorPhoto\":\"Actors_actorPhoto__Gbuho\",\"actorCard\":\"Actors_actorCard__+kdFR\",\"actorName\":\"Actors_actorName__+2jCV\"};","import styles from './Actors.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Actors = ({ cast }) => {\n  return (\n    <ul className={styles.actorsList}>\n      {cast.map(actor => (\n        <li className={styles.actors} key={actor.id}>\n          <img\n            className={styles.actorPhoto}\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${actor.profile_path}`\n                : 'https://image.tmdb.org/t/p/w600_and_h900_bestv2/t9S352o0lbpXoaSC2X2T8bghGDa.jpg'\n            }\n            alt={actor.name}\n          />\n          <div className={styles.actorCard}>\n            <p className={styles.actorName}>{actor.name}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nActors.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'utils/fetchAPI';\nimport { Actors } from 'components/Actors/Actors';\nimport { Section } from 'components/Section/Section';\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(id).then(response => setCast(response.data.cast));\n  }, [id]);\n\n  return cast.length !== 0 ? (\n    <Actors cast={cast} />\n  ) : (\n    <Section title=\"No cast\" />\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '49fe15e72cb1827b9d3c3b6cc5e1d318';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Actors","cast","className","styles","map","actor","src","profile_path","alt","name","id","useParams","useState","setCast","useEffect","fetchCast","then","response","data","length","Section","title","API_KEY","fetchTrending","axios","console","error","fetchSearch","query","fetchDetails","fetchReviews"],"sourceRoot":""}