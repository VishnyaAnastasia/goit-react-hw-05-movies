{"version":3,"file":"static/js/206.81928421.chunk.js","mappings":"mOACA,GAAgB,SAAW,uBAAuB,UAAY,wBAAwB,KAAO,mBAAmB,UAAY,wBAAwB,aAAe,2BAA2B,aAAe,2BAA2B,aAAe,2BAA2B,WAAa,yBAAyB,QAAU,uB,SCGrTA,EAAO,SAAC,GAAc,IAAD,IAAXC,EAAW,EAAXA,KACfC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,iBAAKC,UAAWC,EAAAA,WAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,QAAgBC,GAAE,oBAAEJ,EAASK,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA7D,mBAIA,qBAASJ,UAAWC,EAAAA,SAApB,WACE,gBACED,UAAWC,EAAAA,UACXI,IACER,EAAKS,YAAL,yDACsDT,EAAKS,aACvD,kFAENC,IAAKV,EAAKW,SAEZ,iBAAKR,UAAWC,EAAAA,KAAhB,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,eAAID,UAAWC,EAAAA,UAAf,SAAkCJ,EAAKW,SACvC,cAAGR,UAAWC,EAAAA,aAAd,SAAoCJ,EAAKY,eAE3C,iBAAKT,UAAWC,EAAAA,aAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EAAAA,aACXE,MAAO,CAAEC,KAAMN,EAASK,MAAQL,EAASK,MAAMC,KAAO,KACtDF,GAAE,kBAAaL,EAAKa,GAAlB,SAHJ,mBAOA,SAAC,KAAD,CACEV,UAAWC,EAAAA,aACXE,MAAO,CAAEC,KAAMN,EAASK,MAAQL,EAASK,MAAMC,KAAO,KACtDF,GAAE,kBAAaL,EAAKa,GAAlB,YAHJ,kCAab,E,SCjBD,EAzBgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOjB,EAAP,KAAakB,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAAIQ,MAAK,SAAAC,GACfA,EAILJ,EAAQI,EAASC,MAHfR,EAAS,UAIZ,GACF,GAAE,CAACF,EAAIE,IAGNf,IACE,UAACwB,EAAA,EAAD,YACE,SAACzB,EAAD,CAAMC,KAAMA,KACZ,SAAC,KAAD,MAIP,C,8LC/BKyB,EAAU,mCAEHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IAAA,kEACsCF,IAHpC,cAEnBH,EAFmB,yBAKlBA,GALkB,gCAOzBM,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAW,mCAAG,WAAMC,GAAN,gGAEAJ,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,4DAC2FM,IAH3F,cAEjBT,EAFiB,yBAKhBA,GALgB,gCAOvBM,QAAQC,MAAR,MAPuB,yDAAH,sDAWXT,EAAY,mCAAG,WAAMP,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,oBAC+BY,EAD/B,oBAFC,cAElBH,EAFkB,yBAKjBA,GALiB,gCAOxBM,QAAQC,MAAR,MAPwB,yDAAH,sDAWZG,EAAS,mCAAG,WAAMnB,GAAN,gGAEEc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,oBAFF,cAEfH,EAFe,yBAKdA,GALc,gCAOrBM,QAAQC,MAAR,MAPqB,yDAAH,sDAWTI,EAAY,mCAAG,WAAMpB,GAAN,gGAEDc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BACuCY,EADvC,2BAFC,cAElBH,EAFkB,yBAKjBA,GALiB,gCAOxBM,QAAQC,MAAR,MAPwB,yDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Film/Film.module.css?9097","components/Film/Film.jsx","pages/Details.jsx","utils/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"Film_filmCard__6tkOi\",\"filmCover\":\"Film_filmCover__4YoN6\",\"Info\":\"Film_Info__MU7cJ\",\"filmTitle\":\"Film_filmTitle__tssW8\",\"filmOverview\":\"Film_filmOverview__XyP8c\",\"filmInfoMore\":\"Film_filmInfoMore__xqr+3\",\"filmLinkMore\":\"Film_filmLinkMore__GYjCc\",\"btnSection\":\"Film_btnSection__aXGAX\",\"btnBack\":\"Film_btnBack__8ljX3\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Film.module.css';\n\nexport const Film = ({ film }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <div className={styles.btnSection}>\n        <Link className={styles.btnBack} to={location.state?.from ?? '/'}>\n          Back\n        </Link>\n\n        <section className={styles.filmCard}>\n          <img\n            className={styles.filmCover}\n            src={\n              film.poster_path\n                ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${film.poster_path}`\n                : 'https://image.tmdb.org/t/p/w600_and_h900_bestv2/t9S352o0lbpXoaSC2X2T8bghGDa.jpg'\n            }\n            alt={film.title}\n          />\n          <div className={styles.Info}>\n            <div className={styles.filmInfo}>\n              <h3 className={styles.filmTitle}>{film.title}</h3>\n              <p className={styles.filmOverview}>{film.overview}</p>\n            </div>\n            <div className={styles.filmInfoMore}>\n              <Link\n                className={styles.filmLinkMore}\n                state={{ from: location.state ? location.state.from : '/' }}\n                to={`/search/${film.id}/cast`}\n              >\n                Cast\n              </Link>\n              <Link\n                className={styles.filmLinkMore}\n                state={{ from: location.state ? location.state.from : '/' }}\n                to={`/search/${film.id}/reviews`}\n              >\n                Reviews\n              </Link>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nFilm.propTypes = {\n  film: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\n\nimport { fetchDetails } from 'utils/fetchAPI';\nimport { Film } from 'components/Film/Film';\n\nimport { Section } from 'components/Section/Section';\n\nconst Details = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [film, setFilm] = useState({});\n\n  useEffect(() => {\n    fetchDetails(id).then(response => {\n      if (!response) {\n        navigate('/search');\n        return;\n      }\n      setFilm(response.data);\n    });\n  }, [id, navigate]);\n\n  return (\n    film && (\n      <Section>\n        <Film film={film} />\n        <Outlet />\n      </Section>\n    )\n  );\n};\nexport default Details;\n","import axios from 'axios';\nconst API_KEY = '49fe15e72cb1827b9d3c3b6cc5e1d318';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Film","film","location","useLocation","className","styles","to","state","from","src","poster_path","alt","title","overview","id","useParams","navigate","useNavigate","useState","setFilm","useEffect","fetchDetails","then","response","data","Section","API_KEY","fetchTrending","axios","console","error","fetchSearch","query","fetchCast","fetchReviews"],"sourceRoot":""}